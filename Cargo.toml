[package]
name = "bgp-scout"
version = "0.1.0"
authors = ["Jeremiah Gowdy <jeremiah@gowdy.me>"]
edition = "2021"
license = "MIT"
repository = "https://github.com/jgowdy/bgp-scout"
description = "bgp-scout"
categories = ["network-programming"]
default-run = "bgp-scout"
readme = "README.md"

[[bin]]
name = "bgp-scout"
path = "src/main.rs"

[dependencies]
bgpkit-parser = { version = "0.10.9", features = ["cli"] }

####################
# Core BGP structs #
####################
num_enum = { version = "0.7", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
itertools = { version = "0.12", optional = true }
ipnet = { version = "2.7", optional = true }
bitflags = { version = "2.3.3", features = ["serde"], optional = true }

#######################
# Parser dependencies #
#######################
bytes = { version = "1.5.0", optional = true }
hex = { version = "0.4.3", optional = true } # bmp/openbmp parsing
log = { version = "0.4", optional = true }
oneio = { version = "0.16.7", default-features = false, features = ["remote", "gz", "bz"], optional = true }
regex = { version = "1", optional = true } # used in parser filter
chrono = { version = "0.4.24", optional = true } # parser filter
serde_json = { version = "1.0", optional = true } # RIS Live parsing

####################
# CLI dependencies #
####################
env_logger = { version = "0.11", optional = true }
clap = { version = "4.0", features = ["derive"], optional = true }
ipnetwork = "0.20.0"

[features]
default = ["parser", "rustls", "cli"]
models = [
    "num_enum",
    "num_enum/complex-expressions",
    "ipnet",
    "itertools",
    "bitflags",
]
parser = [
    "bytes",
    "chrono",
    "env_logger",
    "log",
    "models",
    "regex",
]
cli = [
    "clap",
    "parser",
    "env_logger",
    "serde",
    "serde_json"
]
rislive = [
    "parser",
    "serde",
    "serde_json",
    "hex",
]
serde = [
    "dep:serde",
    "ipnet/serde",
]
native-tls = [
    "oneio/native-tls",
]
rustls = [
    "oneio/rustls",
]

# optional compression algorithms support
xz = [
    "oneio/xz"
]
lz = [
    "oneio/lz"
]
